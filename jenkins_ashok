def sendNotifications(String buildStatus = 'STARTED') {
  
  // build status of null means successful
    buildStatus =  buildStatus ?: 'SUCCESS'
   // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} \n Job Name: '${env.JOB_NAME} \n Build Number: [${currentBuild.displayName}]' \n Build URL: (${env.BUILD_URL}) \n }"
  

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

node {

def mavenHome = tool name: "maven_3.8.5"

echo "The Node name is:  ${env.NODE_NAME} "
echo "The Job name is:  ${env.JOB_NAME} "
echo " The Build number is: ${env.BUILD_NUMBER}  "
buildName 'Dev  - ${BUILD_NUMBER}'

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: '']])

//checkout Stage
stage ('CheckoutCode') {

git branch: 'development', credentialsId: '08852502-2058-493f-8a5f-2d3fdc600bb9', url: 'https://github.com/Ashokyalahari/maven-web-application.git'

}


//Build Satge
stage ('Build') {

sh "$mavenHome/bin/mvn clean package"
}

//Generate SonarQube Report 
stage('SonarQubeReport'){
sh "$mavenHome/bin/mvn sonar:sonar"
}

//Upload Artifact into Artifcatory repo
stage('UploadArtifcatsIntoNexus'){
sh "$mavenHome/bin/mvn deploy"
}

//Deploy App into Tomcat Server
stage('DeployAppIntoTomcat'){
sshagent(['4f449e8a-2b73-47eb-8ef2-509772050412']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.234.115.81:/opt/tomcat9/webapps"
}
}
}
